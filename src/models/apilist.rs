//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.12

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "apilist")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub name: String,
    #[sea_orm(unique)]
    pub path: String,
    pub introduce: Option<String>,
    #[sea_orm(
        column_name = "requestParameters",
        column_type = "JsonBinary",
        nullable
    )]
    #[serde(rename = "requestParameters")]
    pub request_parameters: Option<Json>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::apistats::Entity")]
    Apistats,
}

impl Related<super::apistats::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Apistats.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
