name: Cross Build

on:
  push:
    branches: [ main ]   # 推送 main 分支时触发
  pull_request:
    branches: [ main ]
  workflow_dispatch:     # 支持手动触发
  schedule:
    - cron: '0 2 * * *'  # 每天 UTC 时间 2:00 AM

env:
  CARGO_TERM_COLOR: always  # 让 cargo 输出彩色日志（可选）

jobs:
  build:
    strategy:
      matrix:
        target: [
          x86_64-unknown-linux-musl,  # Linux 静态链接
          x86_64-pc-windows-msvc,     # Windows
          aarch64-unknown-linux-musl  # ARM Linux（可选）
        ]
    runs-on: ubuntu-latest  # 所有构建在 Ubuntu 上运行（cross 工具链处理跨平台）

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Rust (如果项目需要)
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install cross
      run: cargo install cross --git https://github.com/cross-rs/cross

    - name: Cross build for ${{ matrix.target }}
      run: cross build --release --target ${{ matrix.target }}

    - name: Upload binary artifact
      uses: actions/upload-artifact@v3
      with:
        name: axum-binary-${{ matrix.target }}
        path: |
          target/${{ matrix.target }}/release/your_binary_name  # 替换为你的二进制名
          # 如果需要额外文件（如配置文件），可以在这里添加
          # config/

  # 可选：发布到 GitHub Releases
  release:
    needs: build  # 依赖 build 任务完成
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'  # 仅 main 分支推送时触发
    runs-on: ubuntu-latest

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/**/*  # 上传所有构建的二进制文件
        draft: false
        prerelease: false